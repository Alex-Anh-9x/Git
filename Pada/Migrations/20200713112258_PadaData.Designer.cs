// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pada.Models;

namespace Pada.Migrations
{
    [DbContext(typeof(Pada_DataContext))]
    [Migration("20200713112258_PadaData")]
    partial class PadaData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pada.Models.ActivityList", b =>
                {
                    b.Property<string>("ActivityName")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.ToTable("ActivityList");
                });

            modelBuilder.Entity("Pada.Models.AdminSetup", b =>
                {
                    b.Property<string>("AdminPassword")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("BaseDp")
                        .HasColumnName("BaseDP")
                        .HasColumnType("decimal(10, 4)");

                    b.Property<decimal?>("BaseFs")
                        .HasColumnName("BaseFS")
                        .HasColumnType("decimal(10, 4)");

                    b.Property<decimal?>("BaseIncome")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("BeginnerBattleLevel")
                        .HasColumnType("int");

                    b.Property<int?>("BeginnerKvalue")
                        .HasColumnType("int");

                    b.Property<decimal?>("ChangePhotoAwardPoint")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("ChangePhotoDeductPoint")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("ChangePhotoSubmitPoint")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("ChangePhotoVoteRequired")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreateActivityPostCost")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal?>("Fmdpfactor")
                        .HasColumnName("FMDPFactor")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("IncomePeriodMinute")
                        .HasColumnName("IncomePeriod_Minute")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("IndexNo")
                        .HasColumnType("int");

                    b.Property<int?>("MaxCurrentBattle")
                        .HasColumnType("int");

                    b.Property<int?>("MaxCurrentJudge")
                        .HasColumnType("int");

                    b.Property<int?>("MinBattleRequiredToRank")
                        .HasColumnType("int");

                    b.Property<int?>("MinCurrentBattle")
                        .HasColumnType("int");

                    b.Property<int?>("MinCurrentJudge")
                        .HasColumnType("int");

                    b.Property<decimal?>("NewFaceMashSubmitPoint")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("NewPhotoAwardPoint")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("NewPhotoDeductPoint")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("NewPhotoVoteRequired")
                        .HasColumnType("int");

                    b.Property<int?>("NormalKvalue")
                        .HasColumnType("int");

                    b.Property<decimal?>("ReferralAward")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("ReferralIncome")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("SaturatedFaceScore")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<int?>("SaturatedKvalue")
                        .HasColumnType("int");

                    b.Property<decimal?>("SendInvitationCost")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("WelcomeMessage")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.ToTable("AdminSetup");
                });

            modelBuilder.Entity("Pada.Models.CompletedActivity", b =>
                {
                    b.Property<string>("Activities")
                        .IsRequired()
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true)
                        .HasMaxLength(30);

                    b.Property<int>("ActivityId")
                        .HasColumnName("ActivityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeCompleted")
                        .HasColumnType("datetime");

                    b.Property<int>("InstantRelationship")
                        .HasColumnType("int");

                    b.Property<int>("InvitationId")
                        .HasColumnName("InvitationID")
                        .HasColumnType("int");

                    b.Property<string>("PartnerId")
                        .IsRequired()
                        .HasColumnName("PartnerID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TargetGender")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("UserID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("CompletedActivity");
                });

            modelBuilder.Entity("Pada.Models.CompletedFmtrans", b =>
                {
                    b.Property<string>("Chooser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("DatePlayed")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Dpoint")
                        .HasColumnName("DPoint")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Loser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PlayerA")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PlayerB")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("ScoreLost")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal>("ScoreWon")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int>("TransactionId")
                        .HasColumnName("TransactionID")
                        .HasColumnType("int");

                    b.Property<string>("Winner")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("CompletedFMTrans");
                });

            modelBuilder.Entity("Pada.Models.CompletedInvitation", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnName("ActivityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeCompleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("FromUserId")
                        .IsRequired()
                        .HasColumnName("FromUserID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnName("TransactionID")
                        .HasColumnType("int");

                    b.ToTable("CompletedInvitation");
                });

            modelBuilder.Entity("Pada.Models.CompletedPhotoRequest", b =>
                {
                    b.Property<int?>("AcceptedVote")
                        .HasColumnType("int");

                    b.Property<string>("AnyPhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FacePhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("FullPhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("NewPhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("OldPhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<int?>("RejectedVote")
                        .HasColumnType("int");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnName("TransactionID")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("VoteRequired")
                        .HasColumnType("int");

                    b.ToTable("CompletedPhotoRequest");
                });

            modelBuilder.Entity("Pada.Models.CompletedPhotoTransaction", b =>
                {
                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeductPoint")
                        .HasColumnType("decimal(6, 3)");

                    b.Property<string>("JudgeId")
                        .IsRequired()
                        .HasColumnName("JudgeID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PhotoRequestId")
                        .HasColumnName("PhotoRequestID")
                        .HasColumnType("int");

                    b.Property<decimal?>("RewardPoint")
                        .HasColumnType("decimal(6, 3)");

                    b.Property<DateTime?>("TimeDone")
                        .HasColumnType("datetime");

                    b.Property<int>("TransactionId")
                        .HasColumnName("TransactionID")
                        .HasColumnType("int");

                    b.ToTable("CompletedPhotoTransaction");
                });

            modelBuilder.Entity("Pada.Models.CompletedReportTransaction", b =>
                {
                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateReported")
                        .HasColumnType("datetime");

                    b.Property<string>("ReportReason")
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int?>("ReportTransId")
                        .HasColumnName("ReportTransID")
                        .HasColumnType("int");

                    b.Property<int?>("ReportType")
                        .HasColumnType("int");

                    b.Property<string>("ReporterId")
                        .HasColumnName("ReporterID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ReportingId")
                        .HasColumnName("ReportingID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnName("TransactionID")
                        .HasColumnType("int");

                    b.ToTable("CompletedReportTransaction");
                });

            modelBuilder.Entity("Pada.Models.CountryStateCity", b =>
                {
                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.ToTable("CountryStateCity");
                });

            modelBuilder.Entity("Pada.Models.PendingActivity", b =>
                {
                    b.Property<string>("Activities")
                        .IsRequired()
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true)
                        .HasMaxLength(30);

                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ActivityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("InstantRelationship")
                        .HasColumnType("int");

                    b.Property<int?>("InvitationCount")
                        .HasColumnType("int");

                    b.Property<int>("TargetGender")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("UserID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("PendingActivity");
                });

            modelBuilder.Entity("Pada.Models.PendingBattleRequest", b =>
                {
                    b.Property<int>("BatteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BatteID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BattlePlayed")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<decimal?>("LowerPoint")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int?>("Processing")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RequestorId")
                        .IsRequired()
                        .HasColumnName("RequestorID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("UpperPoint")
                        .HasColumnType("decimal(10, 5)");

                    b.ToTable("PendingBattleRequest");
                });

            modelBuilder.Entity("Pada.Models.PendingFmtrans", b =>
                {
                    b.Property<string>("Chooser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PlayerA")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("PlayerAbattleId")
                        .HasColumnName("PlayerABattleID")
                        .HasColumnType("int");

                    b.Property<string>("PlayerB")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("PlayerBbattleId")
                        .HasColumnName("PlayerBBattleID")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("PendingFMTrans");
                });

            modelBuilder.Entity("Pada.Models.PendingInvitation", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnName("ActivityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("FromUserId")
                        .IsRequired()
                        .HasColumnName("FromUserID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("PendingInvitation");
                });

            modelBuilder.Entity("Pada.Models.PendingPhotoRequest", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcceptedVote")
                        .HasColumnType("int");

                    b.Property<string>("AnyPhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FacePhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("FullPhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("NewPhotoPath")
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("OldPhotoPath")
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int?>("PendingVote")
                        .HasColumnType("int");

                    b.Property<int?>("RejectedVote")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("VoteRequired")
                        .HasColumnType("int");

                    b.HasKey("TransactionId")
                        .HasName("Transaction ID");

                    b.ToTable("PendingPhotoRequest");
                });

            modelBuilder.Entity("Pada.Models.PendingPhotoTransaction", b =>
                {
                    b.Property<int?>("Approve")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeductPoint")
                        .HasColumnType("decimal(6, 3)");

                    b.Property<string>("JudgeId")
                        .HasColumnName("JudgeID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PhotoRequestId")
                        .HasColumnName("PhotoRequestID")
                        .HasColumnType("int");

                    b.Property<decimal?>("RewardPoint")
                        .HasColumnType("decimal(6, 3)");

                    b.Property<DateTime?>("TimeDone")
                        .HasColumnType("datetime");

                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("PendingPhotoTransaction");
                });

            modelBuilder.Entity("Pada.Models.PendingReportTransaction", b =>
                {
                    b.Property<DateTime?>("DateReported")
                        .HasColumnType("datetime");

                    b.Property<string>("ReportReason")
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int?>("ReportTransId")
                        .HasColumnName("ReportTransID")
                        .HasColumnType("int");

                    b.Property<int?>("ReportType")
                        .HasColumnType("int");

                    b.Property<string>("ReporterId")
                        .HasColumnName("ReporterID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ReportingId")
                        .HasColumnName("ReportingID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("PendingReportTransaction");
                });

            modelBuilder.Entity("Pada.Models.ProductCatalog", b =>
                {
                    b.Property<string>("ProductDescription")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("ProductPrice")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<int?>("ProductType")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductValue")
                        .HasColumnType("decimal(8, 2)");

                    b.ToTable("ProductCatalog");
                });

            modelBuilder.Entity("Pada.Models.ReferalIncome", b =>
                {
                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("JuniorEmail")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PackageName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ReferalType")
                        .HasColumnType("int");

                    b.Property<int>("ReferalValue")
                        .HasColumnType("int");

                    b.Property<string>("SeniorEmail")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.ToTable("ReferalIncome");
                });

            modelBuilder.Entity("Pada.Models.ReportList", b =>
                {
                    b.Property<DateTime>("DateTimeReported")
                        .HasColumnType("datetime");

                    b.Property<string>("FromUserId")
                        .IsRequired()
                        .HasColumnName("FromUserID")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ReportID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportingUserId")
                        .IsRequired()
                        .HasColumnName("ReportingUserID")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.ToTable("ReportList");
                });

            modelBuilder.Entity("Pada.Models.SalesTransaction", b =>
                {
                    b.Property<int?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("ProductPrice")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<int?>("ProductType")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProductValue")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Userid")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("SalesTransaction");
                });

            modelBuilder.Entity("Pada.Models.UserTable", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AccessToken")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("ActivationCode")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int?>("ActiveReferal")
                        .HasColumnType("int");

                    b.Property<int?>("Advertisement")
                        .HasColumnType("int");

                    b.Property<string>("AnyPhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<int?>("CityRank")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nchar(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<string>("Country")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<int?>("CurrentBattle")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentJudge")
                        .HasColumnType("int");

                    b.Property<decimal?>("DailyPointGain")
                        .HasColumnType("decimal(8, 4)");

                    b.Property<DateTime?>("DateJoined")
                        .HasColumnType("date");

                    b.Property<decimal?>("DatePoint")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("date");

                    b.Property<string>("FacePhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<decimal?>("FaceScore")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<string>("Fbemail")
                        .HasColumnName("FBEmail")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FullPhotoPath")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<decimal?>("HeightCm")
                        .HasColumnName("Height_cm")
                        .HasColumnType("decimal(8, 4)");

                    b.Property<decimal?>("Income")
                        .HasColumnType("decimal(8, 4)");

                    b.Property<int?>("IsFaceBookUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastDateTimeCollected")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastDateTimeReported")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NoReported")
                        .HasColumnType("int");

                    b.Property<int?>("PageantRegistered")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("PhotosApproved")
                        .HasColumnType("int");

                    b.Property<int?>("PreviousAccountStatus")
                        .HasColumnType("int");

                    b.Property<int?>("RankStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("RatingScore")
                        .HasColumnType("decimal(11, 4)");

                    b.Property<int?>("ReadFindDate")
                        .HasColumnType("int");

                    b.Property<int?>("ReadNewDating")
                        .HasColumnType("int");

                    b.Property<int?>("ReadPageantJudge")
                        .HasColumnType("int");

                    b.Property<int?>("ReadPageantReg")
                        .HasColumnType("int");

                    b.Property<int?>("ReadPhotoCheck")
                        .HasColumnType("int");

                    b.Property<int?>("ReadUploadPhoto")
                        .HasColumnType("int");

                    b.Property<string>("ReferalCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<int?>("TotalGamePlayed")
                        .HasColumnType("int");

                    b.Property<int?>("UserLevel")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeightKg")
                        .HasColumnName("Weight_kg")
                        .HasColumnType("decimal(8, 4)");

                    b.Property<int?>("WorldRank")
                        .HasColumnType("int");

                    b.HasKey("Email")
                        .HasName("Email");

                    b.ToTable("UserTable");
                });
#pragma warning restore 612, 618
        }
    }
}
